<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emucoo.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.emucoo.model.User">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="lb_ids" jdbcType="VARCHAR" property="lbIds" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="salt" jdbcType="VARCHAR" property="salt" />
        <result column="real_name" jdbcType="VARCHAR" property="realName" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="is_lock" jdbcType="BIT" property="isLock" />
        <result column="is_del" jdbcType="BIT" property="isDel" />
        <result column="is_admin" jdbcType="BIT" property="isAdmin" />
        <result column="login_time" jdbcType="DATE" property="loginTime" />
        <result column="create_time" jdbcType="DATE" property="createTime" />
        <result column="modify_time" jdbcType="DATE" property="modifyTime" />
    </resultMap>

    <select id="findById" parameterType="Long" resultType="com.emucoo.model.User">
        SELECT * FROM t_user u WHERE u.id = #{id}
    </select>

    <select id="findByUserName" resultMap="UserResultMap">
      SELECT * FROM t_user u WHERE  u.username = #{username}
    </select>
    <select id="listUserVo" resultType="com.emucoo.model.User">
        SELECT t1.id, t1.username,  t1.remark,  t1.real_name,
                t1.mobile,  t1.email, t1.is_use,  t1.sex , t1.lb_ids,
        (
            SELECT group_concat(role_name)
            FROM t_dept_role_union
            WHERE user_id = t1.id
            AND role_id != - 1
            and role_id is not null
            GROUP BY user_id
	    ) as roleNames,
        (
            SELECT count(u_parent_id)
            from t_user_of_user
            where u_parent_id = t1.id
        )as subNum
        FROM t_user t1
        WHERE 1=1
        <if test="username != null  and username!=''">
            and username = #{username}
        </if>
        <if test="realName != null  and realName!=''">
            and real_name = #{realName}
        </if>
        <if test="email != null  and email!=''">
            and email = #{email}
        </if>
        <if test="mobile != null  and mobile!=''">
            and mobile = #{mobile}
        </if>

        <if test="labels != null">
            AND
            <foreach close=")" collection="labels" item="item" open="(" separator=" OR ">
                FIND_IN_SET(#{item},lb_ids)
            </foreach>
        </if>
    </select>

    <select id="getUserLogin" resultType="com.emucoo.dto.modules.user.UserLogin">
        SELECT 
        	s.id, s.username, s.head_img_url
<!--         	, t.dpt_id, k.dptname, k.type -->
        FROM t_user s 
<!--         left join t_dept_role_union t on t.user_id = s.id -->
<!--         left join t_department k on k.id = t.dpt_id -->
        WHERE s.mobile = #{mobile} and s.password = #{password}
    </select>
    
    <update id="resetPwd">
    	UPDATE t_user s SET s.password = #{password} WHERE s.mobile = #{mobile}
    </update>
    
    <update id="loginOut">
    	UPDATE t_user s SET s.push_token = null WHERE s.push_token = #{pushToken}
    </update>

    <select id="findByDptId" parameterType="Long" resultMap="UserResultMap">
      SELECT username,
      real_name
      from t_user user INNER JOIN
      t_dept_role_union dptRole ON dptRole.user_id = user.id AND dptRole.dpt_id=#{dptId}
    </select>
</mapper>