<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emucoo.mapper.TOpportunityMapper">
    <resultMap id="BaseResultMap" type="com.emucoo.model.TOpportunity">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="create_type" property="createType" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="BIT"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="front_can_create" property="frontCanCreate" jdbcType="BIT"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT"/>
        <result column="modify_user_id" property="modifyUserId" jdbcType="BIGINT"/>
        <result column="org_id" property="orgId" jdbcType="BIGINT"/>
        <association property="formOppt" javaType="com.emucoo.model.TFormOppt">
            <id column="form_oppt_id" property="id" jdbcType="BIGINT"/>
            <result column="problem_id" property="problemId" jdbcType="BIGINT"/>
            <result column="sub_problem_id" property="subProblemId" jdbcType="BIGINT"/>
        </association>

    </resultMap>

    <insert id="upsert" parameterType="com.emucoo.model.TOpportunity">
        insert into t_opportunity (id, type, name, is_del, is_use, description, front_can_create, create_type,
        create_time, modify_time, create_user_id, modify_user_id, org_id)
        values (#{id}, #{type}, #{name}, #{isDel}, #{isUse}, #{description}, #{frontCanCreate}, #{createType},
        #{createTime}, #{modifyTime}, #{createUserId}, #{modifyUserId}, #{orgId})
        on duplicate key update type=#{type}, name=#{name}, is_del=#{isDel}, is_use=#{isUse},
        description=#{description}, front_can_create=#{frontCanCreate}, create_type=#{createType},
        modify_time=#{modifyTime}, modify_user_id=#{modifyUserId}, org_id=#{orgId}
    </insert>

    <select id="findChancePointsByName" resultMap="BaseResultMap">
        select * from t_opportunity
        <where>
            (is_del = 0 or is_del is null)
            <if test="ctype > 0">
                and create_type = #{ctype}
            </if>
            <if test="isUsed > 0">
                and is_use = 1
            </if>
            <if test="keyword != null and  keyword != ''">
                and name like concat('%', #{keyword}, '%')
            </if>
        </where>
        order by create_time desc
        limit #{startRow}, #{size}
    </select>
    <select id="countChancePointsByName" resultType="java.lang.Integer">
        select count(1) from t_opportunity
        <where>
            (is_del = 0 or is_del is null)
            <if test="ctype > 0">
                and create_type = #{ctype}
            </if>
            <if test="isUsed > 0">
                and is_use = 1
            </if>
            <if test="keyword != null and  keyword != ''">
                and name like concat('%',#{keyword}, '%')
            </if>
        </where>
    </select>

    <update id="removeByIds" parameterType="java.util.List">
        update t_opportunity set is_del = 1
        <where>
            id in
            <foreach collection="list" item="it" open="(" close=")" separator=",">
                #{it}
            </foreach>
        </where>
    </update>

    <update id="changeIsUse" parameterType="java.util.List">
        update t_opportunity set is_use = #{state}
        <where>
            id in
            <foreach collection="ids" item="it" open="(" close=")" separator=",">
                #{it}
            </foreach>
        </where>
    </update>

    <delete id="dropByIds">
        delete from t_opportunity
        <where>
            id in
            <foreach collection="list" item="it" open="(" close=")" separator=",">
                #{it}
            </foreach>
        </where>
    </delete>

    <select id="findOpptsByPbmId" resultMap="BaseResultMap">
        select b.* from t_form_oppt a left join t_opportunity b on a.oppt_id=b.id where a.problem_id=#{id} and
        a.problem_type=1
    </select>

    <delete id="cleanOpptsByResultId">
        delete from t_opportunity where create_type=2 and id in (select distinct oppt_id from `t_form_oppt_value` where
        form_result_id=#{resultId});
    </delete>

    <select id="judgeExistsByName" resultType="java.lang.Integer">
        select count(*) from t_opportunity where create_type=1 and name=#{opptName} and is_del != 1 and id != #{opptId}
    </select>

    <select id="sumChancePointReport" resultType="com.emucoo.dto.modules.form.OpptDetailOut">
        select a.name, d.create_time as `date`, k.name as formName, l.type_name as formTypeName, j.name as
        problemName, j.score as problemScore, h.dpt_name as deptName, g.area_name as areaName, f.brand_name as
        brandName, e.shop_name as shopName
        from t_opportunity a
        inner join t_form_oppt_value b on a.id = b.oppt_id
        left join t_form_check_result d on b.form_result_id = d.id
        left join sys_user c on a.create_user_id = c.id
        left join t_shop_info e on d.shop_id = e.id
        left join t_brand_info f on e.brand_id = f.id
        left join sys_area g on g.id = e.area_id
        left join sys_dept h on h.id = c.dpt_id
        left join t_form_pbm j on j.id = b.problem_id
        left join t_form_main k on k.id = d.form_main_id
        left join t_form_type l on l.form_main_id = k.id
        where a.id = #{id}
        order by d.create_time, l.id asc
        limit 1
    </select>
</mapper>