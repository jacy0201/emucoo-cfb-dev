<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emucoo.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.emucoo.model.SysUser">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="dpt_id" property="dptId" jdbcType="BIGINT"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="is_admin" property="isAdmin" jdbcType="BIT"/>
        <result column="head_img_url" property="headImgUrl" jdbcType="VARCHAR"/>
        <result column="push_token" property="pushToken" jdbcType="VARCHAR"/>
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="modify_user_id" property="modifyUserId" jdbcType="BIGINT"/>
        <result column="is_del" property="isDel" jdbcType="BIT"/>
        <result column="org_id" property="orgId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="is_shop_manager" property="isShopManager" jdbcType="BIT"/>
    </resultMap>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
        select m.perms from sys_user_role ur
        LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
        LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
        where ur.user_id = #{userId}
    </select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
        select distinct rm.menu_id from sys_user_role ur
        LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
        where ur.user_id = #{userId}
    </select>

    <update id="resetPwd" parameterType="java.lang.String">
        update sys_user set password = #{password} where mobile=#{mobile}
    </update>

    <update id="loginOut">
        UPDATE sys_user SET push_token = null WHERE push_token = #{pushToken}
    </update>

    <select id="findPushTokenByIds" parameterType="string" resultType="string">
        select push_token
        from sys_user
        where id in
        <foreach close=")" collection="list" item="id" open="(" separator=",">
            #{id}
        </foreach>
        and status = 0 and push_token is not null
    </select>

    <select id="listByPostId" parameterType="Map" resultType="com.emucoo.model.SysUser">
        SELECT
        t1.*
        FROM
        sys_user_post t2
        INNER JOIN sys_user t1 ON t2.user_id = t1.id
        WHERE t1.is_del=0 AND
        t2.post_id = #{postId}
        <if test="dptId != null">
            and t1.dpt_id = #{dptId}
        </if>
        <if test="realName != null  and realName!=''">
            and t1.real_name LIKE "%"#{realName}"%"
        </if>
        <if test="status != null">
            and t1.status = #{status}
        </if>
        <if test="postId != null">
            and t2.post_id = #{postId}
        </if>
        <if test="username != null  and username!=''">
            and t1.username = #{username}
        </if>
        <if test="mobile != null  and mobile!=''">
            and t1.mobile = #{mobile}
        </if>
        <if test="email != null  and email!=''">
            and t1.email = #{email}
        </if>
        <if test="isShopManager != null">
            and t1.is_shop_manager = #{isShopManager}
        </if>
    </select>

    <select id="listByShopId" parameterType="Map" resultType="com.emucoo.model.SysUser">
        SELECT
        t1.*
        FROM
        sys_user_shop t2
        INNER JOIN sys_user t1 ON t2.user_id = t1.id
        WHERE t1.is_del=0 AND
        t2.shop_id = #{shopId}
        <if test="dptId != null">
            and dpt_id = #{dptId}
        </if>
        <if test="realName != null  and realName!=''">
            and real_name LIKE "%"#{realName}"%"
        </if>
        <if test="status != null">
            and t1.status = #{status}
        </if>
        <if test="postId != null">
            and t2.post_id = #{postId}
        </if>
        <if test="username != null  and username!=''">
            and t1.username = #{username}
        </if>
        <if test="mobile != null  and mobile!=''">
            and t1.mobile = #{mobile}
        </if>
        <if test="email != null  and email!=''">
            and t1.email = #{email}
        </if>
        <if test="isShopManager != null">
            and t1.is_shop_manager = #{isShopManager}
        </if>
    </select>

    <select id="fetchOneByMobile" resultMap="BaseResultMap">
        select * from sys_user where is_del != 1 and mobile = #{mobile} limit 1
    </select>

    <select id="fetchOneByEmail" resultMap="BaseResultMap">
        select * from sys_user where is_del != 1 and email = #{email} limit 1
    </select>

    <select id="fetchOneByUsername" resultMap="BaseResultMap">
        select * from sys_user where is_del != 1 and username = #{username} limit 1
    </select>

    <select id="fetchAllUsers" resultMap="BaseResultMap">
        select * from sys_user where is_del != 1 and is_admin != 1 and status=0
    </select>


    <select id="fetchUsersByAssociateShop" resultMap="BaseResultMap">
        select * from sys_user where is_del != 1 and id in (
            select distinct user_id from sys_user_shop where shop_id in (
                select id from t_shop_info where shop_manager_id=#{userId}
            )
        )
    </select>

    <select id="findAllChildListByParentId" parameterType="Long" resultType="String">
        select getChildPersonList(#{userId})
    </select>

</mapper>